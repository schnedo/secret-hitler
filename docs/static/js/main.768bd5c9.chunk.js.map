{"version":3,"sources":["components/Button.tsx","components/Modal.tsx","License.tsx","Footer.tsx","game/roles/Fascist.ts","game/roles/Hitler.ts","game/roles/Liberal.ts","game/Game.ts","game/player/Avatar.tsx","game/player/Player.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","onClick","children","Global","createGlobalStyle","Container","styled","div","withBackdrop","Modal","open","onClose","event","target","currentTarget","License","href","Footer","useState","isOpen","setOpen","Fascist","Hitler","Liberal","Game","players","this","rolesBag","array","i","length","j","Math","floor","random","shuffleArray","player","maybeRole","pop","undefined","Error","role","Avatar","toString","Player","name","constructor","App","game","setGame","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.768bd5c9.chunk.js","sourcesContent":["import { MouseEventHandler, ReactElement, ReactText } from \"react\";\n\ninterface ButtonProps {\n  onClick?: MouseEventHandler;\n  children: ReactText;\n}\n\nexport default function Button({\n  onClick,\n  children,\n}: ButtonProps): ReactElement {\n  return <button onClick={onClick}>{children}</button>;\n}\n","import { MouseEventHandler, ReactElement, ReactNode } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst Global = createGlobalStyle`\n  body {\n    overflow: hidden;\n  }\n`;\n\ninterface ContainerProps {\n  withBackdrop?: boolean;\n}\n\nconst Container = styled.div<ContainerProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  min-width: 100vw;\n  position: fixed;\n  top: 0;\n  backdrop-filter: ${({ withBackdrop }) => withBackdrop && \"brightness(40%)\"};\n`;\n\nexport interface ModalProps extends ContainerProps {\n  open: boolean;\n  onClose?: () => void;\n  children?: ReactNode;\n}\n\nfunction Modal({\n  open,\n  onClose,\n  children,\n  withBackdrop,\n}: ModalProps): ReactElement {\n  const closeContainer: MouseEventHandler = (event) => {\n    if (onClose && event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  if (!open) {\n    return <></>;\n  }\n  return (\n    <Container withBackdrop={withBackdrop} onClick={closeContainer}>\n      <Global />\n      <dialog open={open}>{children}</dialog>\n    </Container>\n  );\n}\n\nexport default Modal;\n","import { ReactElement } from \"react\";\nimport Modal from \"./components/Modal\";\n\nexport interface LicenseProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport default function License({ open, onClose }: LicenseProps): ReactElement {\n  if (!open) {\n    return <></>;\n  }\n  return (\n    <Modal withBackdrop open={open} onClose={onClose}>\n      <div>\n        Secret Hitler is a game developed by Goat, Wolf, & Cabbage, licensed\n        under the{\" \"}\n        <a href={\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en\"}>\n          CC BY-NC-SA 4.0\n        </a>\n      </div>\n    </Modal>\n  );\n}\n","import React, { ReactElement, useState } from \"react\";\nimport Button from \"./components/Button\";\nimport License from \"./License\";\n\nexport default function Footer(): ReactElement {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <footer>\n      <Button onClick={() => setOpen(true)}>License</Button>\n      <License open={isOpen} onClose={() => setOpen(false)} />\n    </footer>\n  );\n}\n","import Role from \"./Role\";\n\nexport default class Fascist implements Role {}\n","import Fascist from \"./Fascist\";\n\nexport default class Hitler extends Fascist {}\n","import Role from \"./Role\";\n\nexport default class Liberal implements Role {}\n","import { Player } from \"./player/Player\";\nimport { Fascist, Hitler, Liberal } from \"./roles\";\n\n// https://stackoverflow.com/a/12646864\nfunction shuffleArray<T extends object>(array: T[]): void {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexport class Game {\n  readonly players: Player[];\n\n  constructor(players: Player[]) {\n    this.players = players;\n    const rolesBag = [\n      new Hitler(),\n      new Fascist(),\n      new Liberal(),\n      new Liberal(),\n      new Liberal(),\n    ];\n    shuffleArray(rolesBag);\n    for (const player of players) {\n      const maybeRole = rolesBag.pop();\n      if (maybeRole === undefined) {\n        throw Error(\"Assigning Roles Failed\");\n      }\n      player.role = maybeRole;\n    }\n  }\n}\n","import { ReactElement } from \"react\";\nimport { Player } from \"./Player\";\n\nexport interface AvatarProps {\n  player: Player;\n}\n\nexport default function Avatar({ player }: AvatarProps): ReactElement {\n  return <div>{player.toString()}</div>;\n}\n","import { Role } from \"../roles\";\n\nexport class Player {\n  readonly name: string;\n  #role: Role | null;\n\n  constructor(name: string) {\n    this.name = name;\n    this.#role = null;\n  }\n\n  set role(role: Role) {\n    this.#role = role;\n  }\n\n  toString() {\n    return `${this.name}: ${this.#role?.constructor}`;\n  }\n}\n","import React, { ReactElement, useState } from \"react\";\nimport Button from \"./components/Button\";\nimport Footer from \"./Footer\";\nimport { Game } from \"./game/Game\";\nimport Avatar from \"./game/player/Avatar\";\nimport { Player } from \"./game/player/Player\";\n\nconst players: Player[] = [\n  new Player(\"John\"),\n  new Player(\"Martha\"),\n  new Player(\"Bob\"),\n  new Player(\"Alice\"),\n  new Player(\"Mohammed\"),\n];\n\nexport default function App(): ReactElement {\n  const [game, setGame] = useState<Game | null>(null);\n\n  if (game == null) {\n    return (\n      <>\n        {players.map((player) => (\n          <Avatar player={player} />\n        ))}\n        <Button onClick={() => setGame(new Game(players))}>Start</Button>\n        <Footer />\n      </>\n    );\n  } else {\n    return (\n      <>\n        {game.players.map((player) => (\n          <Avatar player={player} />\n        ))}\n      </>\n    );\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}